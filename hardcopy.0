 m/replayManager.js  c/b/test.html  c/b/test.js  m/filterManager.js                    X
  1 // Configure logger for Tools
  2 var logger = new Logger('Client:Base:Test');
  3 // Comment out to use global logging level
  4 Logger.setLevel('Client:Base:Test', 'trace');
  5 // Logger.setLevel('Client:Base:Test', 'debug');
  6 // Logger.setLevel('Client:Base:Test', 'info');
  7 // Logger.setLevel('Client:Base:Test', 'warn');
  8
  9 Template.IdeaReplay.onRendered(function() {
 10   logger.debug("Finished rendering IdeaReplay page");
 11   var user = Session.get("currentUser");
 12   var idea = Ideas.findOne({}, {$sort: {'time': 1}});
 13   logger.trace("Start idea: ");
 14   logger.trace(idea);
 15   var startTime = idea.time - 1;
 16   var diff = new Date().getTime() - startTime;
 17   Session.set("diff", diff);
 18   Session.set("lastTime", startTime);
 19   FilterManager.create("ReplayFilter", user, 'ideas', 'time',
 20        startTime, 'gt');
 21   FilterManager.create("ReplayFilter", user, 'ideas', 'time',
 22        startTime, 'lte');
 23 });
 24
 25
 26 Template.IdeaReplay.helpers({
 27   ideas: function() {
 28     return FilterManager.performQuery("ReplayFilter",
 29           Session.get("currentUser"),
 30           "ideas"
 31           );
 32   }
 33 });
 34
 35 Template.IdeaReplay.events({
 36   'click #replay-btn': function(e) {
 37     logger.debug("Clicked play button");
 38     var idea = Ideas.find({}, {$sort: {'time': -1}}).fetch()[-1];
 39     logger.trace("End idea: ");
 40     logger.trace(idea);
 41     var endTime = idea.time + 1;
 42     var user = Session.get("currentUser");
 43     FilterManager.remove("ReplayFilter", user, 'ideas', 'time',
 44          Session.get("lastTime"));
 45     FilterManager.create("ReplayFilter", user, 'ideas', 'time',
 46          endTime, 'lte');
 47
 48   },
 49 });
"client/base/test.js" 49L, 1581C written                              38,64         All
